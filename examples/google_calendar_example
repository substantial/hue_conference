#!/usr/bin/env ruby

require 'hue_conference'

email = '444643631838-fv16bph1k6sudkvhkjkti702k5pcd925@developer.gserviceaccount.com'
calendarId = "substantial.com_il6c8bmfic8js0vgje0jnjjp7k@group.calendar.google.com"

json_config = {
  google_config: {
    application_name: 'HueCon',
    key_location: 'client.p12',
    google_service_email: email
  },
  rooms: [
    {
      name: "Turf Room",
      calendar_id: calendarId,
      lights: [
        {
          "name" => "Turf Indoor",
          "location" => "indoor"
        },
        {
          "name" => "Turf Outdoor",
          "location" => "outdoor"
        }
      ]
    }
  ]
}

rooms = []
travel_agent = GoogleTravelAgent::Agent.new(json_config[:google_config])

hue = Ruhue.discover

client = Ruhue::Client.new(hue, "substantial")

if client.registered?
  puts "It appears your already registered with the Hub. Play away!"
elsif client.register("ruhue")
  puts "A new application has been registered with the Hub as #{client.username}. Play away!"
end

manifest = HueConference::LightManifest.new(client)

json_config[:rooms].each do |room_hash|
  calendar = HueConference::Calendar.new(room_hash[:calendar_id])
  calendar.build_events(travel_agent.calendar_events(calendar.id))

  new_room = HueConference::Room.new(room_hash)
  new_room.calendar = calendar

  room_hash[:lights].each do |light|
    l = manifest.find_light(light["name"])
    next if l.nil?
    l.location = light["location"]
    new_room.lights << l
  end

  rooms << new_room
end

rooms.each do |room|
  room.on_event_start do |r|
    indoor_light = r.find_light('indoor')
    indoor_light.toggle unless indoor_light.nil?

    outdoor_light = r.find_light('outdoor')
    outdoor_light.turn_on unless outdoor_light.nil?
  end
  room.event_starting

  require 'pry'; binding.pry
end


