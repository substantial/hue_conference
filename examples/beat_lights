#!/usr/bin/env ruby

require "hue_conference"

config = JSON.parse(IO.read(File.join(File.dirname(__FILE__), "sample_config.json")) )
app = HueConference::Application.new(config)
rooms = app.rooms

r = rooms.first

lightA = r.lights[0]
lightB = r.lights[1]
lightC = r.lights[2]

lightA.on!
lightB.on!
lightC.on!

colors = [Color::RGB::Red,
          Color::RGB::Blue,
          Color::RGB::SteelBlue,
          Color::RGB::Green,
          Color::RGB::Yellow,
          Color::RGB::Purple,
          Color::RGB::from_html("#c20000")
]

beat_detector_command = File.join(File.dirname(__FILE__), 'beat_detector.sh')

def do_stuff(input)
  puts "doing stuff: #{input}"
  Thread.new { lightA.color!(colors.sample) }.join
  Thread.new { lightB.color!(colors.sample) }.join
  Thread.new { lightC.color!(colors.sample) }.join
end

require "pty"
begin
  PTY.spawn( beat_detector_command ) do |r, w, pid|
    begin
      r.each do |line|
        do_stuff(line)
      end
    rescue Errno::EIO
    end
  end
rescue PTY::ChildExited => e
  puts "The child process exited!"
end

